<?xml version="1.0"?>
<!--
Copyright (c) 2014, Clearpath Robotics
All rights reserved.

Redistribution and use in source and binary forms, with or without
modification, are permitted provided that the following conditions are met:
    * Redistributions of source code must retain the above copyright
      notice, this list of conditions and the following disclaimer.
    * Redistributions in binary form must reproduce the above copyright
      notice, this list of conditions and the following disclaimer in the
      documentation and/or other materials provided with the distribution.
    * Neither the name of Clearpath Robotics nor the
      names of its contributors may be used to endorse or promote products
      derived from this software without specific prior written permission.

THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND
ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDERS BE LIABLE FOR ANY
DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
(INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
(INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
-->
<launch>
    <arg name="port" default="/dev/ttyUSB0" />

    <arg name="kinova_robotType" default="j2n6s300" />
    <arg name="kinova_robotName" default="$(arg kinova_robotType)"/>
    <arg name="kinova_robotSerial" default="not_set" />
    <arg name="use_jaco_v1_fingers" default="false" />
    <arg name="feedback_publish_rate" default="0.1" />
    <arg name="fps_limit" default="10.0" />

    <!-- Husky harware driver -->
    <node pkg="husky_base" type="husky_node" name="husky_node">
        <rosparam subst_value="true">
            port: $(arg port)

            control_frequency: 10.0
            diagnostic_frequency: 1.0

            max_acceleration: 3.0
            max_speed: 1.0
            wheel_diameter: 0.3302
            polling_timeout: 10.0
        </rosparam>
    </node>

    <!-- Differential controller parameters and basic localization -->
    <arg name="multimaster" default="$(optenv ROBOT_MULTIMASTER false)"/>
    <arg name="simulation" default="$(optenv ROBOT_SIMULATION false)"/>
    <arg name="robot_namespace" default="$(optenv ROBOT_NAMESPACE robot)"/>

    <arg name="config_extras"
       default="$(eval optenv('HUSKY_CONFIG_EXTRAS', find('husky_control') + '/config/empty.yaml'))"/>

    <arg name="laser_enabled" default="$(optenv HUSKY_LMS1XX_ENABLED false)"/>
    <arg name="kinect_enabled" default="$(optenv HUSKY_KINECT_ENABLED true)"/>
    <arg name="urdf_extras" default="$(optenv HUSKY_URDF_EXTRAS)"/>

    <include file="$(find multimaster_launch)/launch/multimaster_robot.launch" if="$(arg multimaster)">
        <arg name="gazebo_interface" value="$(find husky_control)/config/gazebo_interface.yaml" />
        <arg name="public_interface" value="$(find husky_control)/config/public_interface.yaml" />
        <arg name="robot_namespace" value="$(arg robot_namespace)"/>
        <arg name="simulation" value="$(arg simulation)"/>
    </include>

    <include file="$(find togo_description)/launch/description.launch" />

    <!-- Load controller configuration -->
    <rosparam command="load" file="$(find husky_control)/config/control.yaml" />

    <!-- Spawn controllers -->
    <node name="base_controller_spawner" pkg="controller_manager" type="spawner"
        args="husky_joint_publisher husky_velocity_controller"/>

    <node name="$(arg kinova_robotName)_driver" pkg="kinova_driver" type="kinova_arm_driver" output="screen" cwd="node" args="$(arg kinova_robotType)">
    <rosparam file="$(find kinova_bringup)/launch/config/robot_parameters.yaml" command="load" />
        <param name="serial_number" value="$(arg kinova_robotSerial)" />   
        <param name="robot_name" value="$(arg kinova_robotName)" />   
        <param name="robot_type" value="$(arg kinova_robotType)" />   
        <param name="use_jaco_v1_fingers" value="$(arg use_jaco_v1_fingers)" />   
        <param name="status_interval_seconds" value="$(arg feedback_publish_rate)" />
    </node>
    <node name="$(arg kinova_robotName)_state_publisher"
        pkg="robot_state_publisher"
        type="robot_state_publisher">
        <remap from="joint_states" to="/$(arg kinova_robotName)_driver/out/joint_state"/>
    </node>

    <!-- Start EKF for localization -->
    <node pkg="robot_localization" type="ekf_localization_node" name="ekf_localization">
        <rosparam command="load" file="$(find husky_control)/config/localization.yaml" />
    </node>

    <node name="robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher" />

    <node pkg="interactive_marker_twist_server" type="marker_server" name="twist_marker_server" output="screen"/>
    <node pkg="twist_mux" type="twist_mux" name="twist_mux">
        <rosparam command="load" file="$(find husky_control)/config/twist_mux.yaml" />
    <remap from="cmd_vel_out" to="husky_velocity_controller/cmd_vel"/>
    </node>

    <!-- Override the default control parameters, see config/empty.yaml for default. -->
    <rosparam command="load" file="$(arg config_extras)" />

    <!-- Diagnostic Aggregator -->
    <node pkg="diagnostic_aggregator" type="aggregator_node" name="diagnostic_aggregator">
        <rosparam command="load" file="$(find husky_base)/config/diagnostics.yaml"/>
    </node>

    <include file="$(find kinect2_bridge)/launch/kinect2_bridge.launch">
        <arg name="publish_tf" value="true" />
        <arg name="fps_limit" value="$(arg fps_limit)" />
    </include>
</launch>
